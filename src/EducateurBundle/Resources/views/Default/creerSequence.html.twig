{% extends 'educateurBase.html.twig' %}

{% block title %} Ajout d'une séquence {% endblock %}

{% block bodyclass %} class="page-creer-sequence" {% endblock %}

	{% block stylesheets %}
		<style type="text/css">
			
			.etape{
				cursor: pointer;
			}
			.selected{
				background-color: #29e;
				border-radius: 10px;
				border: 1px solid #6f7aa9;

				transition:0.4s;
			}

		</style>
	{% endblock %}

{% block body %}
    hello {{user}}

    <div class="row">
	    <h1>Créez votre séquence</h1>
	    <h2>Pour l'utiliser dans vos contrats ou vos plannings</h2>
	</div>

    <div class="row">
    	<div class="col-md-6">
	    	{{form(form)}}
	    </div>
	    <div class="col-md-6">
	    	<div id="dropzone" style="height:50px;">

	    	</div>
	    </div>	    
    </div>
    <div class="row" id="list-etapes">
	    {% for etape in etapes %}
	    	<div id="etape" class="col-md-2 etape" style="padding:0px">
    			<img src="{{ asset('img/etape/') }}{{ etape.image }}" data-src="{{ etape.image }}" data-origin-id="{{loop.index}}" class="img-responsive" width="100">
	    		<p>{{ etape.libelle }}</p>
	    	</div>
	    {% endfor %}
	</div>
{% endblock body %}

{% block javascripts %}
	<script type="text/javascript">
		var etapes = document.getElementsByClassName("etape");
		var dropzone = document.getElementById("dropzone");
		var position = 0;

		function handleAddEtape(e){
			// console.log(this.firstChild.nextElementSibling);
			var image = this.firstChild.nextElementSibling;
			var clone = image.cloneNode(true);
			var id = image.getAttribute('data-origin-id');
			var p = image.nextElementSibling.innerHTML;
			var imageSrc = image.getAttribute('data-src');
			console.log(p +" "+ imageSrc);
			clone.setAttribute('data-new-id', id);
			clone.setAttribute('data-position', ++position);
			clone.setAttribute('class', 'img-responsive in-list pull-left');
			clone.addEventListener('click', handleRemoveEtape, false);
			dropzone.appendChild(clone);
			this.className = 'col-md-2 etape selected';
			this.removeEventListener('click', handleAddEtape);

			// var checkBox = document.getElementById("form_etapes_"+image.getAttribute('data-origin-id'));
			// checkBox.setAttribute('checked', 'checked');

			var inputLibelle = document.getElementById("form_libelleEtape"+(id-1));
			console.log(inputLibelle);
			var inputImage = document.getElementById("form_imageEtape"+(id-1));
			var inputPosition = document.getElementById("form_positionEtape"+(id-1));
			// console.log(inputLibelle);
			inputLibelle.setAttribute('value', p);
			inputImage.setAttribute('value', imageSrc);
			inputPosition.setAttribute('value', position);
		}

		function handleRemoveEtape(e){
			// console.log(this);
			dropzone.removeChild(this);
			var newId = this.getAttribute('data-new-id');
			console.log(this.getAttribute('data-position'));
			var origin = document.querySelector('[data-origin-id="'+newId+'"]');
			// console.log(origin);
			origin.parentNode.className = 'col-md-2 etape';
			origin.parentNode.addEventListener('click', handleAddEtape, false);

			var etapeSelected = document.getElementsByClassName('in-list');
			//console.log(etapeSelected);
			var oldPosition = this.getAttribute('data-position');
			[].forEach.call(etapeSelected, function(etape) {
				if(etape.getAttribute('data-position') > oldPosition)
					etape.setAttribute('data-position', etape.getAttribute('data-position')-1);
			});
			position--;

			// var checkBox = document.getElementById("form_etapes_"+newId);
			// checkBox.removeAttribute('checked');

			var inputLibelle = document.getElementById("form_libelleEtape"+(newId-1));
			var inputImage = document.getElementById("form_imageEtape"+(newId-1));
			var inputPosition = document.getElementById("form_positionEtape"+(newId-1));
			// console.log(inputLibelle);
			inputLibelle.setAttribute('value', '');
			inputImage.setAttribute('value', '');
			inputPosition.setAttribute('value', null);

			var inputs = document.getElementsByClassName('inputPosition');
			[].forEach.call(inputs, function(input) {
				var newPosition = input.getAttribute('value') - 1;
				if(input.getAttribute('value') > oldPosition)
					input.setAttribute('value', newPosition);
			});
		}

		[].forEach.call(etapes, function(etape) {
			etape.addEventListener('click', handleAddEtape, false);
		});
	</script>
{% endblock %}